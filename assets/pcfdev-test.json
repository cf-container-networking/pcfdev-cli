{
    "variables": {
        "cpus": "1",
        "memory": "1024",
        "disk_size": "10"
    },
    "builders": [
        {
            "type": "virtualbox-iso",
            "headless": true,
            "vm_name": "pcfdev-test",
            "guest_os_type": "Ubuntu_64",
            "disk_size": "{{user `disk_size`}}000",
            "ssh_username": "vcap",
            "ssh_password": "vcap",
            "iso_url": "https://pcfdev.s3.amazonaws.com/artifacts/ubuntu-14.04.3-server-amd64.iso",
            "iso_checksum": "9e5fecc94b3925bededed0fdca1bd417",
            "iso_checksum_type": "md5",
            "http_directory": "http",
            "ssh_timeout": "20m",
            "shutdown_command": "echo vcap | sudo -S shutdown -P now",
            "format": "ova",
            "boot_command": [
                "<esc><esc><enter><wait>",
                "/install/vmlinuz noapic ",
                "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg ",
                "debian-installer=en_US auto locale=en_US kbd-chooser/method=us ",
                "hostname=pcfdev ",
                "fb=false debconf/frontend=noninteractive ",
                "keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA ",
                "keyboard-configuration/variant=USA console-setup/ask_detect=false ",
                "initrd=/install/initrd.gz -- <enter>"
            ],
            "vboxmanage": [
                [ "modifyvm", "{{.Name}}", "--cpus", "{{user `cpus`}}" ],
                [ "modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}" ],
                [ "modifyvm", "{{.Name}}", "--natdnshostresolver1", "on" ],
                [ "modifyvm", "{{.Name}}", "--nic1", "nat" ],
                [ "modifyvm", "{{.Name}}", "--paravirtprovider", "minimal" ]
            ]
        }
    ],

    "provisioners": [
        {
            "type": "file",
            "source": "fake_pcfdev_server",
            "destination": "/tmp/fake_pcfdev_server"
        },
        {
            "type": "file",
            "source": "fake_pcfdev_server.conf",
            "destination": "/tmp/fake_pcfdev_server.conf"
        },        {
            "type": "file",
            "source": "fake_api",
            "destination": "/tmp/fake_api"
        },
        {
            "type": "file",
            "source": "fake_api.conf",
            "destination": "/tmp/fake_api.conf"
        },
        {
            "type": "file",
            "source": "test-public-key.pem",
            "destination": "/tmp/test-public-key.pem"
        },
        {
            "type": "shell",
            "execute_command": "echo vcap | {{ .Vars }} sudo -E -S sh '{{ .Path }}'",
            "inline": [
                "useradd -m --comment 'BOSH System User' vcap",
                "echo 'vcap:vcap' | chpasswd",
                "usermod -s /bin/bash vcap"
            ]
        },
        {
            "type": "shell",
            "execute_command": "echo vcap | {{ .Vars }} sudo -E -S sh '{{ .Path }}'",
            "inline": [ "echo 'vcap ALL=(ALL) NOPASSWD: ALL\nvcap ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers" ]
        },
        {
            "type": "shell",
            "execute_command": "{{ .Vars }} sudo -E sh '{{ .Path }}'",
            "inline": [
                "mkdir -p /var/pcfdev",

                "mv /tmp/fake_pcfdev_server.conf /etc/init",
                "mv /tmp/fake_pcfdev_server /var/pcfdev",
                "chmod +x /var/pcfdev/fake_pcfdev_server",

                "mv /tmp/fake_api.conf /etc/init",
                "mv /tmp/fake_api /var/pcfdev",
                "chmod +x /var/pcfdev/fake_api",

                "echo '#!/bin/bash' > /var/pcfdev/provision",
                "echo \"echo 'Waiting for services to start...'\nservice fake_api start\nservice fake_pcfdev_server start\necho 'Services started'\necho\" >> /var/pcfdev/provision",
                "chmod +x /var/pcfdev/provision",

				"mkdir -p /home/vcap/.ssh",
				"mv /tmp/test-public-key.pem /home/vcap/.ssh/authorized_keys",

                "echo '#!/bin/bash' > /var/pcfdev/health-check",
                "echo \"if [ -f /run/pcfdev-healthcheck ]\nthen\ncat /run/pcfdev-healthcheck\nfi\" >> /var/pcfdev/health-check",
                "chmod +x /var/pcfdev/health-check",

                "echo 'some-pcfdev-provision-log' > /var/pcfdev/provision.log",
                "echo 'some-pcfdev-reset-log' > /var/pcfdev/reset.log"
            ]
        }
    ],
    "post-processors": [
        {
            "type": "vagrant",
            "output": "pcfdev-test-{{.Provider}}-v0.box",
            "keep_input_artifact": true
        }
    ]
}
