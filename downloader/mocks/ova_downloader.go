// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/pivotal-cf/pcfdev-cli/downloader (interfaces: OVADownloader)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of OVADownloader interface
type MockOVADownloader struct {
	ctrl     *gomock.Controller
	recorder *_MockOVADownloaderRecorder
}

// Recorder for MockOVADownloader (not exported)
type _MockOVADownloaderRecorder struct {
	mock *MockOVADownloader
}

func NewMockOVADownloader(ctrl *gomock.Controller) *MockOVADownloader {
	mock := &MockOVADownloader{ctrl: ctrl}
	mock.recorder = &_MockOVADownloaderRecorder{mock}
	return mock
}

func (_m *MockOVADownloader) EXPECT() *_MockOVADownloaderRecorder {
	return _m.recorder
}

func (_m *MockOVADownloader) Download() (string, error) {
	ret := _m.ctrl.Call(_m, "Download")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOVADownloaderRecorder) Download() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Download")
}

func (_m *MockOVADownloader) IsOVACurrent() (bool, error) {
	ret := _m.ctrl.Call(_m, "IsOVACurrent")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOVADownloaderRecorder) IsOVACurrent() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "IsOVACurrent")
}

func (_m *MockOVADownloader) Setup() error {
	ret := _m.ctrl.Call(_m, "Setup")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockOVADownloaderRecorder) Setup() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Setup")
}
