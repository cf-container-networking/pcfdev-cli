// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/pivotal-cf/pcfdev-cli/plugin (interfaces: RequirementsChecker)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of RequirementsChecker interface
type MockRequirementsChecker struct {
	ctrl     *gomock.Controller
	recorder *_MockRequirementsCheckerRecorder
}

// Recorder for MockRequirementsChecker (not exported)
type _MockRequirementsCheckerRecorder struct {
	mock *MockRequirementsChecker
}

func NewMockRequirementsChecker(ctrl *gomock.Controller) *MockRequirementsChecker {
	mock := &MockRequirementsChecker{ctrl: ctrl}
	mock.recorder = &_MockRequirementsCheckerRecorder{mock}
	return mock
}

func (_m *MockRequirementsChecker) EXPECT() *_MockRequirementsCheckerRecorder {
	return _m.recorder
}

func (_m *MockRequirementsChecker) CheckMemory(_param0 uint64) error {
	ret := _m.ctrl.Call(_m, "CheckMemory", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRequirementsCheckerRecorder) CheckMemory(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CheckMemory", arg0)
}

func (_m *MockRequirementsChecker) CheckMinMemory() error {
	ret := _m.ctrl.Call(_m, "CheckMinMemory")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRequirementsCheckerRecorder) CheckMinMemory() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CheckMinMemory")
}
