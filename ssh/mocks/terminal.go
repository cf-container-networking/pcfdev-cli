// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/pivotal-cf/pcfdev-cli/ssh (interfaces: Terminal)

package mocks

import (
	term "github.com/docker/docker/pkg/term"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Terminal interface
type MockTerminal struct {
	ctrl     *gomock.Controller
	recorder *_MockTerminalRecorder
}

// Recorder for MockTerminal (not exported)
type _MockTerminalRecorder struct {
	mock *MockTerminal
}

func NewMockTerminal(ctrl *gomock.Controller) *MockTerminal {
	mock := &MockTerminal{ctrl: ctrl}
	mock.recorder = &_MockTerminalRecorder{mock}
	return mock
}

func (_m *MockTerminal) EXPECT() *_MockTerminalRecorder {
	return _m.recorder
}

func (_m *MockTerminal) GetFdInfo(_param0 interface{}) uintptr {
	ret := _m.ctrl.Call(_m, "GetFdInfo", _param0)
	ret0, _ := ret[0].(uintptr)
	return ret0
}

func (_mr *_MockTerminalRecorder) GetFdInfo(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetFdInfo", arg0)
}

func (_m *MockTerminal) RestoreTerminal(_param0 uintptr, _param1 *term.State) error {
	ret := _m.ctrl.Call(_m, "RestoreTerminal", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTerminalRecorder) RestoreTerminal(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RestoreTerminal", arg0, arg1)
}

func (_m *MockTerminal) SetRawTerminal(_param0 uintptr) (*term.State, error) {
	ret := _m.ctrl.Call(_m, "SetRawTerminal", _param0)
	ret0, _ := ret[0].(*term.State)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTerminalRecorder) SetRawTerminal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetRawTerminal", arg0)
}
