// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/pivotal-cf/pcfdev-cli/ssh (interfaces: Terminal)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	terminal "golang.org/x/crypto/ssh/terminal"
)

// Mock of Terminal interface
type MockTerminal struct {
	ctrl     *gomock.Controller
	recorder *_MockTerminalRecorder
}

// Recorder for MockTerminal (not exported)
type _MockTerminalRecorder struct {
	mock *MockTerminal
}

func NewMockTerminal(ctrl *gomock.Controller) *MockTerminal {
	mock := &MockTerminal{ctrl: ctrl}
	mock.recorder = &_MockTerminalRecorder{mock}
	return mock
}

func (_m *MockTerminal) EXPECT() *_MockTerminalRecorder {
	return _m.recorder
}

func (_m *MockTerminal) MakeRaw(_param0 int) (*terminal.State, error) {
	ret := _m.ctrl.Call(_m, "MakeRaw", _param0)
	ret0, _ := ret[0].(*terminal.State)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTerminalRecorder) MakeRaw(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MakeRaw", arg0)
}

func (_m *MockTerminal) Restore(_param0 int, _param1 *terminal.State) error {
	ret := _m.ctrl.Call(_m, "Restore", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTerminalRecorder) Restore(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Restore", arg0, arg1)
}
