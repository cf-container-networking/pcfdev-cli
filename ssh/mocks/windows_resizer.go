// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/pivotal-cf/pcfdev-cli/ssh (interfaces: WindowResizer)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	ssh "golang.org/x/crypto/ssh"
)

// Mock of WindowResizer interface
type MockWindowResizer struct {
	ctrl     *gomock.Controller
	recorder *_MockWindowResizerRecorder
}

// Recorder for MockWindowResizer (not exported)
type _MockWindowResizerRecorder struct {
	mock *MockWindowResizer
}

func NewMockWindowResizer(ctrl *gomock.Controller) *MockWindowResizer {
	mock := &MockWindowResizer{ctrl: ctrl}
	mock.recorder = &_MockWindowResizerRecorder{mock}
	return mock
}

func (_m *MockWindowResizer) EXPECT() *_MockWindowResizerRecorder {
	return _m.recorder
}

func (_m *MockWindowResizer) StartResizing(_param0 *ssh.Session) {
	_m.ctrl.Call(_m, "StartResizing", _param0)
}

func (_mr *_MockWindowResizerRecorder) StartResizing(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "StartResizing", arg0)
}

func (_m *MockWindowResizer) StopResizing() {
	_m.ctrl.Call(_m, "StopResizing")
}

func (_mr *_MockWindowResizerRecorder) StopResizing() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "StopResizing")
}
