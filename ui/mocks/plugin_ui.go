// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/pivotal-cf/pcfdev-cli/ui (interfaces: PluginUI)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of PluginUI interface
type MockPluginUI struct {
	ctrl     *gomock.Controller
	recorder *_MockPluginUIRecorder
}

// Recorder for MockPluginUI (not exported)
type _MockPluginUIRecorder struct {
	mock *MockPluginUI
}

func NewMockPluginUI(ctrl *gomock.Controller) *MockPluginUI {
	mock := &MockPluginUI{ctrl: ctrl}
	mock.recorder = &_MockPluginUIRecorder{mock}
	return mock
}

func (_m *MockPluginUI) EXPECT() *_MockPluginUIRecorder {
	return _m.recorder
}

func (_m *MockPluginUI) Say(_param0 string, _param1 ...interface{}) {
	_s := []interface{}{_param0}
	for _, _x := range _param1 {
		_s = append(_s, _x)
	}
	_m.ctrl.Call(_m, "Say", _s...)
}

func (_mr *_MockPluginUIRecorder) Say(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Say", _s...)
}
